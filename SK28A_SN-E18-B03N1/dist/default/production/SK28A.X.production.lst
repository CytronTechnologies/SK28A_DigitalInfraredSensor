

HI-TECH Software PIC LITE Macro Assembler V1.00 build 12136 
                                                                                               Wed Jul 25 17:00:52 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 12136
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 12136"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F876A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 19 "Main.c"
    43                           psect config,class=CONFIG,delta=2 ;# 
    44                           # 19 "Main.c"
    45  2007  3F32               dw 0x3F32 ;# 
    46                           	FNCALL	_main,_LCD_initialize
    47                           	FNCALL	_main,_LCD_clear
    48                           	FNCALL	_main,_LCD_goto
    49                           	FNCALL	_main,_LCD_putstr
    50                           	FNCALL	_LCD_initialize,_LCD_command
    51                           	FNCALL	_LCD_clear,_LCD_command
    52                           	FNCALL	_LCD_goto,_LCD_command
    53                           	FNCALL	_LCD_putstr,_LCD_senddata
    54                           	FNCALL	_LCD_command,_LCD_4bitsend
    55                           	FNCALL	_LCD_senddata,_LCD_4bitsend
    56                           	FNROOT	_main
    57                           	global	_RB2
    58  0032                     _RB2	set	0x32
    59                           	global	_RB3
    60  0033                     _RB3	set	0x33
    61                           	global	_RB4
    62  0034                     _RB4	set	0x34
    63                           	global	_RB5
    64  0035                     _RB5	set	0x35
    65                           	global	_RB6
    66  0036                     _RB6	set	0x36
    67                           	global	_RB7
    68  0037                     _RB7	set	0x37
    69                           	global	_RC3
    70  003B                     _RC3	set	0x3B
    71                           	global	_TRISB
    72  0086                     _TRISB	set	0x86
    73                           	global	_TRISC3
    74  043B                     _TRISC3	set	0x43B
    75                           psect	strings,class=STRING,delta=2
    76                           global __pstrings
    77  0003                     __pstrings:
    78                           ;	global	stringdir,stringtab,__stringbase
    79  0003                     stringtab:
    80                           ;	String table - string pointers are 1 byte each
    81  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
    82  0003  3000               movlw high(stringdir)
    83  0004  008A               movwf pclath
    84  0005  0804               movf fsr,w
    85  0006  0A84               incf fsr
    86  0007  0782               	addwf pc
    87  0008                     __stringbase:
    88  0008  3400               	retlw	0
    89                           psect	strings
    90                           	
    91  0009                     STR_1:	
    92  0009  3442               	retlw	66	;'B'
    93  000A  346C               	retlw	108	;'l'
    94  000B  346F               	retlw	111	;'o'
    95  000C  3463               	retlw	99	;'c'
    96  000D  346B               	retlw	107	;'k'
    97  000E  3421               	retlw	33	;'!'
    98  000F  3420               	retlw	32	;' '
    99  0010  3420               	retlw	32	;' '
   100  0011  3400               	retlw	0
   101                           psect	strings
   102                           	
   103  0012                     STR_2:	
   104  0012  3455               	retlw	85	;'U'
   105  0013  346E               	retlw	110	;'n'
   106  0014  3462               	retlw	98	;'b'
   107  0015  346C               	retlw	108	;'l'
   108  0016  346F               	retlw	111	;'o'
   109  0017  3463               	retlw	99	;'c'
   110  0018  346B               	retlw	107	;'k'
   111  0019  342E               	retlw	46	;'.'
   112  001A  3400               	retlw	0
   113                           psect	strings
   114                           	file	"C:\Users\HATAKE~1\AppData\Local\Temp\s5d0."
   115                           	line	#
   116                           psect cinit,class=CODE,delta=2
   117                           global start_initialization
   118  064C                     start_initialization:
   119                           
   120                           psect cinit,class=CODE,delta=2,merge=1
   121                           global end_of_initialization
   122                           
   123                           ;End of C runtime variable initialization code
   124                           
   125  064C                     end_of_initialization:
   126  064C  0183               clrf status
   127  064D  120A  118A  2EA5   ljmp _main	;jump to C main() function
   128                           psect	cstackCOMMON,class=COMMON,space=1
   129                           global __pcstackCOMMON
   130  0070                     __pcstackCOMMON:
   131                           	global	?_LCD_initialize
   132  0070                     ?_LCD_initialize:	; 0 bytes @ 0x0
   133                           	global	?_LCD_clear
   134  0070                     ?_LCD_clear:	; 0 bytes @ 0x0
   135                           	global	?_LCD_putstr
   136  0070                     ?_LCD_putstr:	; 0 bytes @ 0x0
   137                           	global	?_LCD_4bitsend
   138  0070                     ?_LCD_4bitsend:	; 0 bytes @ 0x0
   139                           	global	??_LCD_4bitsend
   140  0070                     ??_LCD_4bitsend:	; 0 bytes @ 0x0
   141                           	global	?_LCD_command
   142  0070                     ?_LCD_command:	; 0 bytes @ 0x0
   143                           	global	?_LCD_senddata
   144  0070                     ?_LCD_senddata:	; 0 bytes @ 0x0
   145                           	global	?_main
   146  0070                     ?_main:	; 2 bytes @ 0x0
   147  0070                     	ds	1
   148                           	global	LCD_4bitsend@data
   149  0071                     LCD_4bitsend@data:	; 1 bytes @ 0x1
   150  0071                     	ds	1
   151                           	global	??_LCD_command
   152  0072                     ??_LCD_command:	; 0 bytes @ 0x2
   153                           	global	??_LCD_senddata
   154  0072                     ??_LCD_senddata:	; 0 bytes @ 0x2
   155                           	global	LCD_command@var
   156  0072                     LCD_command@var:	; 1 bytes @ 0x2
   157                           	global	LCD_senddata@var
   158  0072                     LCD_senddata@var:	; 1 bytes @ 0x2
   159  0072                     	ds	1
   160                           	global	??_LCD_initialize
   161  0073                     ??_LCD_initialize:	; 0 bytes @ 0x3
   162                           	global	??_LCD_clear
   163  0073                     ??_LCD_clear:	; 0 bytes @ 0x3
   164                           	global	?_LCD_goto
   165  0073                     ?_LCD_goto:	; 0 bytes @ 0x3
   166                           	global	??_LCD_putstr
   167  0073                     ??_LCD_putstr:	; 0 bytes @ 0x3
   168                           	global	LCD_goto@column
   169  0073                     LCD_goto@column:	; 1 bytes @ 0x3
   170  0073                     	ds	1
   171                           	global	??_LCD_goto
   172  0074                     ??_LCD_goto:	; 0 bytes @ 0x4
   173                           	global	LCD_putstr@csz_string
   174  0074                     LCD_putstr@csz_string:	; 1 bytes @ 0x4
   175                           	global	LCD_goto@row
   176  0074                     LCD_goto@row:	; 1 bytes @ 0x4
   177  0074                     	ds	1
   178                           	global	??_main
   179  0075                     ??_main:	; 0 bytes @ 0x5
   180                           ;!
   181                           ;!Data Sizes:
   182                           ;!    Strings     18
   183                           ;!    Constant    0
   184                           ;!    Data        0
   185                           ;!    BSS         0
   186                           ;!    Persistent  0
   187                           ;!    Stack       0
   188                           ;!
   189                           ;!Auto Spaces:
   190                           ;!    Space          Size  Autos    Used
   191                           ;!    COMMON           14      5       5
   192                           ;!    BANK0            80      0       0
   193                           ;!    BANK1            80      0       0
   194                           ;!    BANK3            96      0       0
   195                           ;!    BANK2            96      0       0
   196                           
   197                           ;!
   198                           ;!Pointer List with Targets:
   199                           ;!
   200                           ;!    LCD_putstr@csz_string	PTR unsigned char  size(1) Largest target is 9
   201                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
   202                           ;!
   203                           
   204                           
   205                           ;!
   206                           ;!Critical Paths under _main in COMMON
   207                           ;!
   208                           ;!    _main->_LCD_initialize
   209                           ;!    _main->_LCD_goto
   210                           ;!    _main->_LCD_putstr
   211                           ;!    _LCD_initialize->_LCD_command
   212                           ;!    _LCD_clear->_LCD_command
   213                           ;!    _LCD_goto->_LCD_command
   214                           ;!    _LCD_putstr->_LCD_senddata
   215                           ;!    _LCD_command->_LCD_4bitsend
   216                           ;!    _LCD_senddata->_LCD_4bitsend
   217                           ;!
   218                           ;!Critical Paths under _main in BANK0
   219                           ;!
   220                           ;!    None.
   221                           ;!
   222                           ;!Critical Paths under _main in BANK1
   223                           ;!
   224                           ;!    None.
   225                           ;!
   226                           ;!Critical Paths under _main in BANK3
   227                           ;!
   228                           ;!    None.
   229                           ;!
   230                           ;!Critical Paths under _main in BANK2
   231                           ;!
   232                           ;!    None.
   233                           
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   236 ;;
   237                           
   238                           ;!
   239                           ;!Call Graph Tables:
   240                           ;!
   241                           ;! ---------------------------------------------------------------------------------
   242                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   243                           ;! ---------------------------------------------------------------------------------
   244                           ;! (0) _main                                                 0     0      0     615
   245                           ;!                     _LCD_initialize
   246                           ;!                          _LCD_clear
   247                           ;!                           _LCD_goto
   248                           ;!                         _LCD_putstr
   249                           ;! ---------------------------------------------------------------------------------
   250                           ;! (1) _LCD_initialize                                       2     2      0     135
   251                           ;!                                              3 COMMON     2     2      0
   252                           ;!                        _LCD_command
   253                           ;! ---------------------------------------------------------------------------------
   254                           ;! (1) _LCD_clear                                            0     0      0     135
   255                           ;!                        _LCD_command
   256                           ;! ---------------------------------------------------------------------------------
   257                           ;! (1) _LCD_goto                                             2     1      1     180
   258                           ;!                                              3 COMMON     2     1      1
   259                           ;!                        _LCD_command
   260                           ;! ---------------------------------------------------------------------------------
   261                           ;! (1) _LCD_putstr                                           2     2      0     165
   262                           ;!                                              3 COMMON     2     2      0
   263                           ;!                       _LCD_senddata
   264                           ;! ---------------------------------------------------------------------------------
   265                           ;! (2) _LCD_command                                          1     1      0     135
   266                           ;!                                              2 COMMON     1     1      0
   267                           ;!                       _LCD_4bitsend
   268                           ;! ---------------------------------------------------------------------------------
   269                           ;! (2) _LCD_senddata                                         1     1      0     135
   270                           ;!                                              2 COMMON     1     1      0
   271                           ;!                       _LCD_4bitsend
   272                           ;! ---------------------------------------------------------------------------------
   273                           ;! (3) _LCD_4bitsend                                         2     2      0     120
   274                           ;!                                              0 COMMON     2     2      0
   275                           ;! ---------------------------------------------------------------------------------
   276                           ;! Estimated maximum stack depth 3
   277                           ;! ---------------------------------------------------------------------------------
   278                           ;!
   279                           ;! Call Graph Graphs:
   280                           ;!
   281                           ;! _main (ROOT)
   282                           ;!   _LCD_initialize
   283                           ;!     _LCD_command
   284                           ;!       _LCD_4bitsend
   285                           ;!   _LCD_clear
   286                           ;!     _LCD_command
   287                           ;!       _LCD_4bitsend
   288                           ;!   _LCD_goto
   289                           ;!     _LCD_command
   290                           ;!       _LCD_4bitsend
   291                           ;!   _LCD_putstr
   292                           ;!     _LCD_senddata
   293                           ;!       _LCD_4bitsend
   294                           ;!
   295                           
   296                           ;! Address spaces:
   297                           
   298                           ;!Name               Size   Autos  Total    Cost      Usage
   299                           ;!BITCOMMON            E      0       0       0        0.0%
   300                           ;!EEDATA             100      0       0       0        0.0%
   301                           ;!NULL                 0      0       0       0        0.0%
   302                           ;!CODE                 0      0       0       0        0.0%
   303                           ;!COMMON               E      5       5       1       35.7%
   304                           ;!BITSFR0              0      0       0       1        0.0%
   305                           ;!SFR0                 0      0       0       1        0.0%
   306                           ;!BITSFR1              0      0       0       2        0.0%
   307                           ;!SFR1                 0      0       0       2        0.0%
   308                           ;!STACK                0      0       3       2        0.0%
   309                           ;!ABS                  0      0       0       3        0.0%
   310                           ;!BITBANK0            50      0       0       4        0.0%
   311                           ;!BITSFR3              0      0       0       4        0.0%
   312                           ;!SFR3                 0      0       0       4        0.0%
   313                           ;!BANK0               50      0       0       5        0.0%
   314                           ;!BITSFR2              0      0       0       5        0.0%
   315                           ;!SFR2                 0      0       0       5        0.0%
   316                           ;!BITBANK1            50      0       0       6        0.0%
   317                           ;!BANK1               50      0       0       7        0.0%
   318                           ;!BITBANK3            60      0       0       8        0.0%
   319                           ;!BANK3               60      0       0       9        0.0%
   320                           ;!BITBANK2            60      0       0      10        0.0%
   321                           ;!BANK2               60      0       0      11        0.0%
   322                           ;!DATA                 0      0       0      12        0.0%
   323                           
   324                           	global	_main
   325                           
   326 ;; *************** function _main *****************
   327 ;; Defined at:
   328 ;;		line 45 in file "Main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  2   30[COMMON] int 
   335 ;; Registers used:
   336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : 17F/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         0       0       0       0       0
   343 ;;      Locals:         0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0
   345 ;;      Totals:         0       0       0       0       0
   346 ;;Total ram usage:        0 bytes
   347 ;; Hardware stack levels required when called:    3
   348 ;; This function calls:
   349 ;;		_LCD_initialize
   350 ;;		_LCD_clear
   351 ;;		_LCD_goto
   352 ;;		_LCD_putstr
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           psect	maintext,global,class=CODE,delta=2,split=1
   358                           global __pmaintext
   359  06A5                     __pmaintext:
   360                           psect	maintext
   361                           	file	"Main.c"
   362                           	line	45
   363                           	global	__size_of_main
   364  0034                     	__size_of_main	equ	__end_of_main-_main
   365                           	
   366  06A5                     _main:	
   367                           	opt	stack 5
   368                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   369                           	line	47
   370                           	
   371  06A5                     l628:	
   372                           ;Main.c: 47: TRISC3 = 1;
   373  06A5  1683               	bsf	status, 5	;RP0=1, select bank1
   374  06A6  1303               	bcf	status, 6	;RP1=0, select bank1
   375  06A7  1587               	bsf	(1083/8)^080h,(1083)&7	;volatile
   376                           	line	48
   377                           	
   378  06A8                     l630:	
   379                           ;Main.c: 48: TRISB = 0;
   380  06A8  0186               	clrf	(134)^080h	;volatile
   381                           	line	49
   382                           	
   383  06A9                     l632:	
   384                           ;Main.c: 49: LCD_initialize();
   385  06A9  120A  118A  26D9   	fcall	_LCD_initialize
              120A  118A         
   386                           	line	50
   387                           	
   388  06AE                     l634:	
   389                           ;Main.c: 50: LCD_clear();
   390  06AE  120A  118A  2650   	fcall	_LCD_clear
              120A  118A         
   391  06B3  2EB4               	goto	l636
   392                           	line	51
   393                           ;Main.c: 51: while(1)
   394                           	
   395  06B4                     l31:	
   396                           	line	53
   397                           	
   398  06B4                     l636:	
   399                           ;Main.c: 52: {
   400                           ;Main.c: 53: LCD_goto(0,0);
   401  06B4  01F3               	clrf	(?_LCD_goto)
   402  06B5  3000               	movlw	(0)
   403  06B6  120A  118A  266D   	fcall	_LCD_goto
              120A  118A         
   404                           	line	54
   405                           	
   406  06BB                     l638:	
   407                           ;Main.c: 54: if(RC3 == 1)
   408  06BB  1283               	bcf	status, 5	;RP0=0, select bank0
   409  06BC  1303               	bcf	status, 6	;RP1=0, select bank0
   410  06BD  1D87               	btfss	(59/8),(59)&7	;volatile
   411  06BE  2EC0               	goto	u261
   412  06BF  2EC1               	goto	u260
   413  06C0                     u261:
   414  06C0  2EC8               	goto	l32
   415  06C1                     u260:
   416                           	line	57
   417                           	
   418  06C1                     l640:	
   419                           ;Main.c: 55: {
   420                           ;Main.c: 57: LCD_putstr("Block!  ");
   421  06C1  3001               	movlw	((STR_1-__stringbase))&0ffh
   422  06C2  120A  118A  2684   	fcall	_LCD_putstr
              120A  118A         
   423                           	line	58
   424                           ;Main.c: 58: }
   425  06C7  2EB4               	goto	l636
   426                           	line	59
   427                           	
   428  06C8                     l32:	
   429                           ;Main.c: 59: else if(RC3 == 0)
   430  06C8  1987               	btfsc	(59/8),(59)&7	;volatile
   431  06C9  2ECB               	goto	u271
   432  06CA  2ECC               	goto	u270
   433  06CB                     u271:
   434  06CB  2EB4               	goto	l636
   435  06CC                     u270:
   436                           	line	62
   437                           	
   438  06CC                     l642:	
   439                           ;Main.c: 60: {
   440                           ;Main.c: 62: LCD_putstr("Unblock.");
   441  06CC  300A               	movlw	((STR_2-__stringbase))&0ffh
   442  06CD  120A  118A  2684   	fcall	_LCD_putstr
              120A  118A         
   443  06D2  2EB4               	goto	l636
   444                           	line	63
   445                           	
   446  06D3                     l34:	
   447  06D3  2EB4               	goto	l636
   448                           	line	64
   449                           	
   450  06D4                     l33:	
   451  06D4  2EB4               	goto	l636
   452                           	
   453  06D5                     l35:	
   454                           	line	51
   455  06D5  2EB4               	goto	l636
   456                           	
   457  06D6                     l36:	
   458                           	line	65
   459                           	
   460  06D6                     l37:	
   461                           	global	start
   462  06D6  120A  118A  2800   	ljmp	start
   463                           	opt stack 0
   464                           GLOBAL	__end_of_main
   465  06D9                     	__end_of_main:
   466                           	signat	_main,90
   467                           	global	_LCD_initialize
   468                           
   469 ;; *************** function _LCD_initialize *****************
   470 ;; Defined at:
   471 ;;		line 97 in file "Main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;		None               void
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          2       0       0       0       0
   488 ;;      Totals:         2       0       0       0       0
   489 ;;Total ram usage:        2 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    2
   492 ;; This function calls:
   493 ;;		_LCD_command
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           psect	text79,local,class=CODE,delta=2,merge=1
   499                           global __ptext79
   500  06D9                     __ptext79:
   501                           psect	text79
   502                           	file	"Main.c"
   503                           	line	97
   504                           	global	__size_of_LCD_initialize
   505  0087                     	__size_of_LCD_initialize	equ	__end_of_LCD_initialize-_LCD_initialize
   506                           	
   507  06D9                     _LCD_initialize:	
   508                           	opt	stack 5
   509                           ; Regs used in _LCD_initialize: [wreg+status,2+status,0+pclath+cstack]
   510                           	line	98
   511                           	
   512  06D9                     l548:	
   513                           ;Main.c: 98: _delay((unsigned long)((30)*(2e6/4000.0)));
   514                           	opt asmopt_off
   515  06D9  3014               movlw	20
   516  06DA  00F4               movwf	((??_LCD_initialize+0)+0+1),f
   517  06DB  3079               	movlw	121
   518  06DC  00F3               movwf	((??_LCD_initialize+0)+0),f
   519  06DD                     u287:
   520  06DD  0BF3               	decfsz	((??_LCD_initialize+0)+0),f
   521  06DE  2EDD               	goto	u287
   522  06DF  0BF4               	decfsz	((??_LCD_initialize+0)+0+1),f
   523  06E0  2EDD               	goto	u287
   524  06E1  2EE2               	nop2
   525                           opt asmopt_on
   526                           
   527                           	line	100
   528                           	
   529  06E2                     l550:	
   530                           ;Main.c: 100: RB3 = 1;
   531  06E2  1283               	bcf	status, 5	;RP0=0, select bank0
   532  06E3  1303               	bcf	status, 6	;RP1=0, select bank0
   533  06E4  1586               	bsf	(51/8),(51)&7	;volatile
   534                           	line	101
   535                           ;Main.c: 101: _delay((unsigned long)((20)*(2e6/4000.0)));
   536                           	opt asmopt_off
   537  06E5  300D               movlw	13
   538  06E6  00F4               movwf	((??_LCD_initialize+0)+0+1),f
   539  06E7  30FB               	movlw	251
   540  06E8  00F3               movwf	((??_LCD_initialize+0)+0),f
   541  06E9                     u297:
   542  06E9  0BF3               	decfsz	((??_LCD_initialize+0)+0),f
   543  06EA  2EE9               	goto	u297
   544  06EB  0BF4               	decfsz	((??_LCD_initialize+0)+0+1),f
   545  06EC  2EE9               	goto	u297
   546  06ED  2EEE               	nop2
   547                           opt asmopt_on
   548                           
   549                           	line	102
   550                           	
   551  06EE                     l552:	
   552                           ;Main.c: 102: RB3 = 0;
   553  06EE  1283               	bcf	status, 5	;RP0=0, select bank0
   554  06EF  1303               	bcf	status, 6	;RP1=0, select bank0
   555  06F0  1186               	bcf	(51/8),(51)&7	;volatile
   556                           	line	103
   557                           	
   558  06F1                     l554:	
   559                           ;Main.c: 103: RB2 = 0;
   560  06F1  1106               	bcf	(50/8),(50)&7	;volatile
   561                           	line	104
   562                           	
   563  06F2                     l556:	
   564                           ;Main.c: 104: RB7 = 0;
   565  06F2  1386               	bcf	(55/8),(55)&7	;volatile
   566                           	line	105
   567                           	
   568  06F3                     l558:	
   569                           ;Main.c: 105: RB6 = 0;
   570  06F3  1306               	bcf	(54/8),(54)&7	;volatile
   571                           	line	106
   572                           	
   573  06F4                     l560:	
   574                           ;Main.c: 106: RB5 = 1;
   575  06F4  1686               	bsf	(53/8),(53)&7	;volatile
   576                           	line	107
   577                           	
   578  06F5                     l562:	
   579                           ;Main.c: 107: RB4 = 1;
   580  06F5  1606               	bsf	(52/8),(52)&7	;volatile
   581                           	line	108
   582                           	
   583  06F6                     l564:	
   584                           ;Main.c: 108: RB3 = 1;
   585  06F6  1586               	bsf	(51/8),(51)&7	;volatile
   586                           	line	109
   587                           ;Main.c: 109: _delay((unsigned long)((2)*(2e6/4000.0)));
   588                           	opt asmopt_off
   589  06F7  30F9               movlw	249
   590  06F8  00F3               movwf	(??_LCD_initialize+0)+0,f
   591  06F9                     u307:
   592  06F9  0000               	nop
   593  06FA  0BF3               decfsz	(??_LCD_initialize+0)+0,f
   594  06FB  2EF9               	goto	u307
   595  06FC  2EFD               	nop2	;nop
   596  06FD  0000               	nop
   597                           opt asmopt_on
   598                           
   599                           	line	110
   600                           	
   601  06FE                     l566:	
   602                           ;Main.c: 110: RB3 = 0;
   603  06FE  1283               	bcf	status, 5	;RP0=0, select bank0
   604  06FF  1303               	bcf	status, 6	;RP1=0, select bank0
   605  0700  1186               	bcf	(51/8),(51)&7	;volatile
   606                           	line	113
   607                           	
   608  0701                     l568:	
   609                           ;Main.c: 113: RB7 = 0;
   610  0701  1386               	bcf	(55/8),(55)&7	;volatile
   611                           	line	114
   612                           	
   613  0702                     l570:	
   614                           ;Main.c: 114: RB6 = 0;
   615  0702  1306               	bcf	(54/8),(54)&7	;volatile
   616                           	line	115
   617                           	
   618  0703                     l572:	
   619                           ;Main.c: 115: RB5 = 1;
   620  0703  1686               	bsf	(53/8),(53)&7	;volatile
   621                           	line	116
   622                           	
   623  0704                     l574:	
   624                           ;Main.c: 116: RB4 = 1;
   625  0704  1606               	bsf	(52/8),(52)&7	;volatile
   626                           	line	117
   627                           	
   628  0705                     l576:	
   629                           ;Main.c: 117: RB3 = 1;
   630  0705  1586               	bsf	(51/8),(51)&7	;volatile
   631                           	line	118
   632                           ;Main.c: 118: _delay((unsigned long)((2)*(2e6/4000.0)));
   633                           	opt asmopt_off
   634  0706  30F9               movlw	249
   635  0707  00F3               movwf	(??_LCD_initialize+0)+0,f
   636  0708                     u317:
   637  0708  0000               	nop
   638  0709  0BF3               decfsz	(??_LCD_initialize+0)+0,f
   639  070A  2F08               	goto	u317
   640  070B  2F0C               	nop2	;nop
   641  070C  0000               	nop
   642                           opt asmopt_on
   643                           
   644                           	line	119
   645                           	
   646  070D                     l578:	
   647                           ;Main.c: 119: RB3 = 0;
   648  070D  1283               	bcf	status, 5	;RP0=0, select bank0
   649  070E  1303               	bcf	status, 6	;RP1=0, select bank0
   650  070F  1186               	bcf	(51/8),(51)&7	;volatile
   651                           	line	120
   652                           ;Main.c: 120: _delay((unsigned long)((2)*(2e6/4000.0)));
   653                           	opt asmopt_off
   654  0710  30F9               movlw	249
   655  0711  00F3               movwf	(??_LCD_initialize+0)+0,f
   656  0712                     u327:
   657  0712  0000               	nop
   658  0713  0BF3               decfsz	(??_LCD_initialize+0)+0,f
   659  0714  2F12               	goto	u327
   660  0715  2F16               	nop2	;nop
   661  0716  0000               	nop
   662                           opt asmopt_on
   663                           
   664                           	line	122
   665                           	
   666  0717                     l580:	
   667                           ;Main.c: 122: RB7 = 0;
   668  0717  1283               	bcf	status, 5	;RP0=0, select bank0
   669  0718  1303               	bcf	status, 6	;RP1=0, select bank0
   670  0719  1386               	bcf	(55/8),(55)&7	;volatile
   671                           	line	123
   672                           	
   673  071A                     l582:	
   674                           ;Main.c: 123: RB6 = 0;
   675  071A  1306               	bcf	(54/8),(54)&7	;volatile
   676                           	line	124
   677                           	
   678  071B                     l584:	
   679                           ;Main.c: 124: RB5 = 1;
   680  071B  1686               	bsf	(53/8),(53)&7	;volatile
   681                           	line	125
   682                           	
   683  071C                     l586:	
   684                           ;Main.c: 125: RB4 = 1;
   685  071C  1606               	bsf	(52/8),(52)&7	;volatile
   686                           	line	126
   687                           	
   688  071D                     l588:	
   689                           ;Main.c: 126: RB3 = 1;
   690  071D  1586               	bsf	(51/8),(51)&7	;volatile
   691                           	line	127
   692                           ;Main.c: 127: _delay((unsigned long)((2)*(2e6/4000.0)));
   693                           	opt asmopt_off
   694  071E  30F9               movlw	249
   695  071F  00F3               movwf	(??_LCD_initialize+0)+0,f
   696  0720                     u337:
   697  0720  0000               	nop
   698  0721  0BF3               decfsz	(??_LCD_initialize+0)+0,f
   699  0722  2F20               	goto	u337
   700  0723  2F24               	nop2	;nop
   701  0724  0000               	nop
   702                           opt asmopt_on
   703                           
   704                           	line	128
   705                           	
   706  0725                     l590:	
   707                           ;Main.c: 128: RB3 = 0;
   708  0725  1283               	bcf	status, 5	;RP0=0, select bank0
   709  0726  1303               	bcf	status, 6	;RP1=0, select bank0
   710  0727  1186               	bcf	(51/8),(51)&7	;volatile
   711                           	line	129
   712                           ;Main.c: 129: _delay((unsigned long)((2)*(2e6/4000.0)));
   713                           	opt asmopt_off
   714  0728  30F9               movlw	249
   715  0729  00F3               movwf	(??_LCD_initialize+0)+0,f
   716  072A                     u347:
   717  072A  0000               	nop
   718  072B  0BF3               decfsz	(??_LCD_initialize+0)+0,f
   719  072C  2F2A               	goto	u347
   720  072D  2F2E               	nop2	;nop
   721  072E  0000               	nop
   722                           opt asmopt_on
   723                           
   724                           	line	131
   725                           	
   726  072F                     l592:	
   727                           ;Main.c: 131: RB7 = 0;
   728  072F  1283               	bcf	status, 5	;RP0=0, select bank0
   729  0730  1303               	bcf	status, 6	;RP1=0, select bank0
   730  0731  1386               	bcf	(55/8),(55)&7	;volatile
   731                           	line	132
   732                           	
   733  0732                     l594:	
   734                           ;Main.c: 132: RB6 = 0;
   735  0732  1306               	bcf	(54/8),(54)&7	;volatile
   736                           	line	133
   737                           	
   738  0733                     l596:	
   739                           ;Main.c: 133: RB5 = 1;
   740  0733  1686               	bsf	(53/8),(53)&7	;volatile
   741                           	line	134
   742                           	
   743  0734                     l598:	
   744                           ;Main.c: 134: RB4 = 0;
   745  0734  1206               	bcf	(52/8),(52)&7	;volatile
   746                           	line	135
   747                           	
   748  0735                     l600:	
   749                           ;Main.c: 135: RB3 = 1;
   750  0735  1586               	bsf	(51/8),(51)&7	;volatile
   751                           	line	136
   752                           ;Main.c: 136: _delay((unsigned long)((2)*(2e6/4000.0)));
   753                           	opt asmopt_off
   754  0736  30F9               movlw	249
   755  0737  00F3               movwf	(??_LCD_initialize+0)+0,f
   756  0738                     u357:
   757  0738  0000               	nop
   758  0739  0BF3               decfsz	(??_LCD_initialize+0)+0,f
   759  073A  2F38               	goto	u357
   760  073B  2F3C               	nop2	;nop
   761  073C  0000               	nop
   762                           opt asmopt_on
   763                           
   764                           	line	137
   765                           	
   766  073D                     l602:	
   767                           ;Main.c: 137: RB3 = 0;
   768  073D  1283               	bcf	status, 5	;RP0=0, select bank0
   769  073E  1303               	bcf	status, 6	;RP1=0, select bank0
   770  073F  1186               	bcf	(51/8),(51)&7	;volatile
   771                           	line	138
   772                           ;Main.c: 138: _delay((unsigned long)((2)*(2e6/4000.0)));
   773                           	opt asmopt_off
   774  0740  30F9               movlw	249
   775  0741  00F3               movwf	(??_LCD_initialize+0)+0,f
   776  0742                     u367:
   777  0742  0000               	nop
   778  0743  0BF3               decfsz	(??_LCD_initialize+0)+0,f
   779  0744  2F42               	goto	u367
   780  0745  2F46               	nop2	;nop
   781  0746  0000               	nop
   782                           opt asmopt_on
   783                           
   784                           	line	141
   785                           	
   786  0747                     l604:	
   787                           ;Main.c: 141: LCD_command (0x28);
   788  0747  3028               	movlw	(028h)
   789  0748  120A  118A  2662   	fcall	_LCD_command
              120A  118A         
   790                           	line	142
   791                           	
   792  074D                     l606:	
   793                           ;Main.c: 142: LCD_command (0x0C);
   794  074D  300C               	movlw	(0Ch)
   795  074E  120A  118A  2662   	fcall	_LCD_command
              120A  118A         
   796                           	line	143
   797                           	
   798  0753                     l608:	
   799                           ;Main.c: 143: LCD_command (0x01);
   800  0753  3001               	movlw	(01h)
   801  0754  120A  118A  2662   	fcall	_LCD_command
              120A  118A         
   802                           	line	144
   803                           	
   804  0759                     l610:	
   805                           ;Main.c: 144: LCD_command (0x06);
   806  0759  3006               	movlw	(06h)
   807  075A  120A  118A  2662   	fcall	_LCD_command
              120A  118A         
   808                           	line	145
   809                           	
   810  075F                     l46:	
   811  075F  0008               	return
   812                           	opt stack 0
   813                           GLOBAL	__end_of_LCD_initialize
   814  0760                     	__end_of_LCD_initialize:
   815                           	signat	_LCD_initialize,88
   816                           	global	_LCD_clear
   817                           
   818 ;; *************** function _LCD_clear *****************
   819 ;; Defined at:
   820 ;;		line 178 in file "Main.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;		None               void
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0, pclath, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0
   837 ;;      Totals:         0       0       0       0       0
   838 ;;Total ram usage:        0 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    2
   841 ;; This function calls:
   842 ;;		_LCD_command
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           psect	text80,local,class=CODE,delta=2,merge=1
   848                           global __ptext80
   849  0650                     __ptext80:
   850                           psect	text80
   851                           	file	"Main.c"
   852                           	line	178
   853                           	global	__size_of_LCD_clear
   854  0007                     	__size_of_LCD_clear	equ	__end_of_LCD_clear-_LCD_clear
   855                           	
   856  0650                     _LCD_clear:	
   857                           	opt	stack 5
   858                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
   859                           	line	179
   860                           	
   861  0650                     l612:	
   862                           ;Main.c: 179: LCD_command(0b00000001);
   863  0650  3001               	movlw	(01h)
   864  0651  120A  118A  2662   	fcall	_LCD_command
              120A  118A         
   865                           	line	180
   866                           	
   867  0656                     l58:	
   868  0656  0008               	return
   869                           	opt stack 0
   870                           GLOBAL	__end_of_LCD_clear
   871  0657                     	__end_of_LCD_clear:
   872                           	signat	_LCD_clear,88
   873                           	global	_LCD_goto
   874                           
   875 ;; *************** function _LCD_goto *****************
   876 ;; Defined at:
   877 ;;		line 183 in file "Main.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  row             1    wreg     unsigned char 
   880 ;;  column          1    3[COMMON] unsigned char 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  row             1    4[COMMON] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;		None               void
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, pclath, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         1       0       0       0       0
   893 ;;      Locals:         1       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0
   895 ;;      Totals:         2       0       0       0       0
   896 ;;Total ram usage:        2 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    2
   899 ;; This function calls:
   900 ;;		_LCD_command
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           psect	text81,local,class=CODE,delta=2,merge=1
   906                           global __ptext81
   907  066D                     __ptext81:
   908                           psect	text81
   909                           	file	"Main.c"
   910                           	line	183
   911                           	global	__size_of_LCD_goto
   912  0017                     	__size_of_LCD_goto	equ	__end_of_LCD_goto-_LCD_goto
   913                           	
   914  066D                     _LCD_goto:	
   915                           	opt	stack 5
   916                           ; Regs used in _LCD_goto: [wreg+status,2+status,0+pclath+cstack]
   917                           ;LCD_goto@row stored from wreg
   918  066D  00F4               	movwf	(LCD_goto@row)
   919                           	line	184
   920                           	
   921  066E                     l614:	
   922                           ;Main.c: 184: if(row == 0)
   923  066E  08F4               	movf	(LCD_goto@row),f
   924  066F  1D03               	skipz
   925  0670  2E72               	goto	u241
   926  0671  2E73               	goto	u240
   927  0672                     u241:
   928  0672  2E7B               	goto	l618
   929  0673                     u240:
   930                           	line	185
   931                           	
   932  0673                     l616:	
   933                           ;Main.c: 185: LCD_command(0x80 | column);
   934  0673  0873               	movf	(LCD_goto@column),w
   935  0674  3880               	iorlw	080h
   936  0675  120A  118A  2662   	fcall	_LCD_command
              120A  118A         
   937  067A  2E83               	goto	l63
   938                           	line	186
   939                           	
   940  067B                     l61:	
   941                           	line	187
   942                           	
   943  067B                     l618:	
   944                           ;Main.c: 186: else
   945                           ;Main.c: 187: LCD_command(0x80 | 0x40 | column);
   946  067B  0873               	movf	(LCD_goto@column),w
   947  067C  38C0               	iorlw	0C0h
   948  067D  120A  118A  2662   	fcall	_LCD_command
              120A  118A         
   949  0682  2E83               	goto	l63
   950                           	
   951  0683                     l62:	
   952                           	line	188
   953                           	
   954  0683                     l63:	
   955  0683  0008               	return
   956                           	opt stack 0
   957                           GLOBAL	__end_of_LCD_goto
   958  0684                     	__end_of_LCD_goto:
   959                           	signat	_LCD_goto,8312
   960                           	global	_LCD_putstr
   961                           
   962 ;; *************** function _LCD_putstr *****************
   963 ;; Defined at:
   964 ;;		line 168 in file "Main.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  csz_string      1    wreg     PTR unsigned char 
   967 ;;		 -> STR_2(9), STR_1(9), 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  csz_string      1    4[COMMON] PTR unsigned char 
   970 ;;		 -> STR_2(9), STR_1(9), 
   971 ;; Return value:  Size  Location     Type
   972 ;;		None               void
   973 ;; Registers used:
   974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   980 ;;      Params:         0       0       0       0       0
   981 ;;      Locals:         1       0       0       0       0
   982 ;;      Temps:          1       0       0       0       0
   983 ;;      Totals:         2       0       0       0       0
   984 ;;Total ram usage:        2 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    2
   987 ;; This function calls:
   988 ;;		_LCD_senddata
   989 ;; This function is called by:
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           psect	text82,local,class=CODE,delta=2,merge=1
   994                           global __ptext82
   995  0684                     __ptext82:
   996                           psect	text82
   997                           	file	"Main.c"
   998                           	line	168
   999                           	global	__size_of_LCD_putstr
  1000  0021                     	__size_of_LCD_putstr	equ	__end_of_LCD_putstr-_LCD_putstr
  1001                           	
  1002  0684                     _LCD_putstr:	
  1003                           	opt	stack 5
  1004                           ; Regs used in _LCD_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1005                           ;LCD_putstr@csz_string stored from wreg
  1006  0684  00F4               	movwf	(LCD_putstr@csz_string)
  1007                           	line	170
  1008                           	
  1009  0685                     l620:	
  1010                           ;Main.c: 170: while (*csz_string != '\0')
  1011  0685  2E97               	goto	l626
  1012                           	
  1013  0686                     l53:	
  1014                           	line	172
  1015                           	
  1016  0686                     l622:	
  1017                           ;Main.c: 171: {
  1018                           ;Main.c: 172: LCD_senddata(*csz_string);
  1019  0686  0874               	movf	(LCD_putstr@csz_string),w
  1020  0687  0084               	movwf	fsr0
  1021  0688  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1022  068D  120A  118A  2657   	fcall	_LCD_senddata
              120A  118A         
  1023                           	line	173
  1024                           	
  1025  0692                     l624:	
  1026                           ;Main.c: 173: csz_string++;
  1027  0692  3001               	movlw	(01h)
  1028  0693  00F3               	movwf	(??_LCD_putstr+0)+0
  1029  0694  0873               	movf	(??_LCD_putstr+0)+0,w
  1030  0695  07F4               	addwf	(LCD_putstr@csz_string),f
  1031  0696  2E97               	goto	l626
  1032                           	line	174
  1033                           	
  1034  0697                     l52:	
  1035                           	line	170
  1036                           	
  1037  0697                     l626:	
  1038  0697  0874               	movf	(LCD_putstr@csz_string),w
  1039  0698  0084               	movwf	fsr0
  1040  0699  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1041  069E  3800               	iorlw	0
  1042  069F  1D03               	skipz
  1043  06A0  2EA2               	goto	u251
  1044  06A1  2EA3               	goto	u250
  1045  06A2                     u251:
  1046  06A2  2E86               	goto	l622
  1047  06A3                     u250:
  1048  06A3  2EA4               	goto	l55
  1049                           	
  1050  06A4                     l54:	
  1051                           	line	175
  1052                           	
  1053  06A4                     l55:	
  1054  06A4  0008               	return
  1055                           	opt stack 0
  1056                           GLOBAL	__end_of_LCD_putstr
  1057  06A5                     	__end_of_LCD_putstr:
  1058                           	signat	_LCD_putstr,4216
  1059                           	global	_LCD_command
  1060                           
  1061 ;; *************** function _LCD_command *****************
  1062 ;; Defined at:
  1063 ;;		line 91 in file "Main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  var             1    wreg     unsigned char 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  var             1    2[COMMON] unsigned char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;		None               void
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         1       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0
  1080 ;;      Totals:         1       0       0       0       0
  1081 ;;Total ram usage:        1 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    1
  1084 ;; This function calls:
  1085 ;;		_LCD_4bitsend
  1086 ;; This function is called by:
  1087 ;;		_LCD_initialize
  1088 ;;		_LCD_clear
  1089 ;;		_LCD_goto
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           psect	text83,local,class=CODE,delta=2,merge=1
  1093                           global __ptext83
  1094  0662                     __ptext83:
  1095                           psect	text83
  1096                           	file	"Main.c"
  1097                           	line	91
  1098                           	global	__size_of_LCD_command
  1099  000B                     	__size_of_LCD_command	equ	__end_of_LCD_command-_LCD_command
  1100                           	
  1101  0662                     _LCD_command:	
  1102                           	opt	stack 5
  1103                           ; Regs used in _LCD_command: [wreg+status,2+status,0+pclath+cstack]
  1104                           ;LCD_command@var stored from wreg
  1105  0662  00F2               	movwf	(LCD_command@var)
  1106                           	line	92
  1107                           	
  1108  0663                     l540:	
  1109                           ;Main.c: 92: RB2 = 0;
  1110  0663  1283               	bcf	status, 5	;RP0=0, select bank0
  1111  0664  1303               	bcf	status, 6	;RP1=0, select bank0
  1112  0665  1106               	bcf	(50/8),(50)&7	;volatile
  1113                           	line	93
  1114                           	
  1115  0666                     l542:	
  1116                           ;Main.c: 93: LCD_4bitsend(var);
  1117  0666  0872               	movf	(LCD_command@var),w
  1118  0667  120A  118A  2760   	fcall	_LCD_4bitsend
              120A  118A         
  1119                           	line	94
  1120                           	
  1121  066C                     l43:	
  1122  066C  0008               	return
  1123                           	opt stack 0
  1124                           GLOBAL	__end_of_LCD_command
  1125  066D                     	__end_of_LCD_command:
  1126                           	signat	_LCD_command,4216
  1127                           	global	_LCD_senddata
  1128                           
  1129 ;; *************** function _LCD_senddata *****************
  1130 ;; Defined at:
  1131 ;;		line 149 in file "Main.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  var             1    wreg     unsigned char 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  var             1    2[COMMON] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;		None               void
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         1       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0
  1148 ;;      Totals:         1       0       0       0       0
  1149 ;;Total ram usage:        1 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    1
  1152 ;; This function calls:
  1153 ;;		_LCD_4bitsend
  1154 ;; This function is called by:
  1155 ;;		_LCD_putstr
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           psect	text84,local,class=CODE,delta=2,merge=1
  1159                           global __ptext84
  1160  0657                     __ptext84:
  1161                           psect	text84
  1162                           	file	"Main.c"
  1163                           	line	149
  1164                           	global	__size_of_LCD_senddata
  1165  000B                     	__size_of_LCD_senddata	equ	__end_of_LCD_senddata-_LCD_senddata
  1166                           	
  1167  0657                     _LCD_senddata:	
  1168                           	opt	stack 5
  1169                           ; Regs used in _LCD_senddata: [wreg+status,2+status,0+pclath+cstack]
  1170                           ;LCD_senddata@var stored from wreg
  1171  0657  00F2               	movwf	(LCD_senddata@var)
  1172                           	line	150
  1173                           	
  1174  0658                     l544:	
  1175                           ;Main.c: 150: RB2 = 1;
  1176  0658  1283               	bcf	status, 5	;RP0=0, select bank0
  1177  0659  1303               	bcf	status, 6	;RP1=0, select bank0
  1178  065A  1506               	bsf	(50/8),(50)&7	;volatile
  1179                           	line	151
  1180                           	
  1181  065B                     l546:	
  1182                           ;Main.c: 151: LCD_4bitsend(var);
  1183  065B  0872               	movf	(LCD_senddata@var),w
  1184  065C  120A  118A  2760   	fcall	_LCD_4bitsend
              120A  118A         
  1185                           	line	152
  1186                           	
  1187  0661                     l49:	
  1188  0661  0008               	return
  1189                           	opt stack 0
  1190                           GLOBAL	__end_of_LCD_senddata
  1191  0662                     	__end_of_LCD_senddata:
  1192                           	signat	_LCD_senddata,4216
  1193                           	global	_LCD_4bitsend
  1194                           
  1195 ;; *************** function _LCD_4bitsend *****************
  1196 ;; Defined at:
  1197 ;;		line 69 in file "Main.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  data            1    wreg     unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  data            1    1[COMMON] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;		None               void
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       0       0       0
  1212 ;;      Locals:         1       0       0       0       0
  1213 ;;      Temps:          1       0       0       0       0
  1214 ;;      Totals:         2       0       0       0       0
  1215 ;;Total ram usage:        2 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_LCD_command
  1221 ;;		_LCD_senddata
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           psect	text85,local,class=CODE,delta=2,merge=1
  1225                           global __ptext85
  1226  0760                     __ptext85:
  1227                           psect	text85
  1228                           	file	"Main.c"
  1229                           	line	69
  1230                           	global	__size_of_LCD_4bitsend
  1231  00A0                     	__size_of_LCD_4bitsend	equ	__end_of_LCD_4bitsend-_LCD_4bitsend
  1232                           	
  1233  0760                     _LCD_4bitsend:	
  1234                           	opt	stack 5
  1235                           ; Regs used in _LCD_4bitsend: [wreg+status,2+status,0]
  1236                           ;LCD_4bitsend@data stored from wreg
  1237  0760  00F1               	movwf	(LCD_4bitsend@data)
  1238                           	line	70
  1239                           	
  1240  0761                     l520:	
  1241                           ;Main.c: 70: RB7 = 1 & (data >> 7);
  1242  0761  0871               	movf	(LCD_4bitsend@data),w
  1243  0762  00F0               	movwf	(??_LCD_4bitsend+0)+0
  1244  0763  3007               	movlw	07h
  1245  0764                     u15:
  1246  0764  1003               	clrc
  1247  0765  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  1248  0766  3EFF               	addlw	-1
  1249  0767  1D03               	skipz
  1250  0768  2F64               	goto	u15
  1251  0769  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  1252  076A  2F6C               	goto	u21
  1253  076B  2F70               	goto	u20
  1254                           	
  1255  076C                     u21:
  1256  076C  1283               	bcf	status, 5	;RP0=0, select bank0
  1257  076D  1303               	bcf	status, 6	;RP1=0, select bank0
  1258  076E  1786               	bsf	(55/8),(55)&7	;volatile
  1259  076F  2F73               	goto	u34
  1260  0770                     u20:
  1261  0770  1283               	bcf	status, 5	;RP0=0, select bank0
  1262  0771  1303               	bcf	status, 6	;RP1=0, select bank0
  1263  0772  1386               	bcf	(55/8),(55)&7	;volatile
  1264  0773                     u34:
  1265                           	line	71
  1266                           ;Main.c: 71: RB6 = 1 & (data >> 6);
  1267  0773  0871               	movf	(LCD_4bitsend@data),w
  1268  0774  00F0               	movwf	(??_LCD_4bitsend+0)+0
  1269  0775  3006               	movlw	06h
  1270  0776                     u45:
  1271  0776  1003               	clrc
  1272  0777  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  1273  0778  3EFF               	addlw	-1
  1274  0779  1D03               	skipz
  1275  077A  2F76               	goto	u45
  1276  077B  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  1277  077C  2F7E               	goto	u51
  1278  077D  2F82               	goto	u50
  1279                           	
  1280  077E                     u51:
  1281  077E  1283               	bcf	status, 5	;RP0=0, select bank0
  1282  077F  1303               	bcf	status, 6	;RP1=0, select bank0
  1283  0780  1706               	bsf	(54/8),(54)&7	;volatile
  1284  0781  2F85               	goto	u64
  1285  0782                     u50:
  1286  0782  1283               	bcf	status, 5	;RP0=0, select bank0
  1287  0783  1303               	bcf	status, 6	;RP1=0, select bank0
  1288  0784  1306               	bcf	(54/8),(54)&7	;volatile
  1289  0785                     u64:
  1290                           	line	72
  1291                           ;Main.c: 72: RB5 = 1 & (data >> 5);
  1292  0785  0871               	movf	(LCD_4bitsend@data),w
  1293  0786  00F0               	movwf	(??_LCD_4bitsend+0)+0
  1294  0787  3005               	movlw	05h
  1295  0788                     u75:
  1296  0788  1003               	clrc
  1297  0789  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  1298  078A  3EFF               	addlw	-1
  1299  078B  1D03               	skipz
  1300  078C  2F88               	goto	u75
  1301  078D  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  1302  078E  2F90               	goto	u81
  1303  078F  2F94               	goto	u80
  1304                           	
  1305  0790                     u81:
  1306  0790  1283               	bcf	status, 5	;RP0=0, select bank0
  1307  0791  1303               	bcf	status, 6	;RP1=0, select bank0
  1308  0792  1686               	bsf	(53/8),(53)&7	;volatile
  1309  0793  2F97               	goto	u94
  1310  0794                     u80:
  1311  0794  1283               	bcf	status, 5	;RP0=0, select bank0
  1312  0795  1303               	bcf	status, 6	;RP1=0, select bank0
  1313  0796  1286               	bcf	(53/8),(53)&7	;volatile
  1314  0797                     u94:
  1315                           	line	73
  1316                           ;Main.c: 73: RB4 = 1 & (data >> 4);
  1317  0797  0871               	movf	(LCD_4bitsend@data),w
  1318  0798  00F0               	movwf	(??_LCD_4bitsend+0)+0
  1319  0799  3004               	movlw	04h
  1320  079A                     u105:
  1321  079A  1003               	clrc
  1322  079B  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  1323  079C  3EFF               	addlw	-1
  1324  079D  1D03               	skipz
  1325  079E  2F9A               	goto	u105
  1326  079F  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  1327  07A0  2FA2               	goto	u111
  1328  07A1  2FA6               	goto	u110
  1329                           	
  1330  07A2                     u111:
  1331  07A2  1283               	bcf	status, 5	;RP0=0, select bank0
  1332  07A3  1303               	bcf	status, 6	;RP1=0, select bank0
  1333  07A4  1606               	bsf	(52/8),(52)&7	;volatile
  1334  07A5  2FA9               	goto	u124
  1335  07A6                     u110:
  1336  07A6  1283               	bcf	status, 5	;RP0=0, select bank0
  1337  07A7  1303               	bcf	status, 6	;RP1=0, select bank0
  1338  07A8  1206               	bcf	(52/8),(52)&7	;volatile
  1339  07A9                     u124:
  1340                           	line	74
  1341                           	
  1342  07A9                     l522:	
  1343                           ;Main.c: 74: RB3 = 1;
  1344  07A9  1586               	bsf	(51/8),(51)&7	;volatile
  1345                           	line	75
  1346                           	
  1347  07AA                     l524:	
  1348                           ;Main.c: 75: _delay((unsigned long)((2)*(2e6/4000.0)));
  1349                           	opt asmopt_off
  1350  07AA  30F9               movlw	249
  1351  07AB  00F0               movwf	(??_LCD_4bitsend+0)+0,f
  1352  07AC                     u377:
  1353  07AC  0000               	nop
  1354  07AD  0BF0               decfsz	(??_LCD_4bitsend+0)+0,f
  1355  07AE  2FAC               	goto	u377
  1356  07AF  2FB0               	nop2	;nop
  1357  07B0  0000               	nop
  1358                           opt asmopt_on
  1359                           
  1360                           	line	76
  1361                           	
  1362  07B1                     l526:	
  1363                           ;Main.c: 76: RB3 = 0;
  1364  07B1  1283               	bcf	status, 5	;RP0=0, select bank0
  1365  07B2  1303               	bcf	status, 6	;RP1=0, select bank0
  1366  07B3  1186               	bcf	(51/8),(51)&7	;volatile
  1367                           	line	79
  1368                           	
  1369  07B4                     l528:	
  1370                           ;Main.c: 79: RB7 = 1 & (data >> 3);
  1371  07B4  0871               	movf	(LCD_4bitsend@data),w
  1372  07B5  00F0               	movwf	(??_LCD_4bitsend+0)+0
  1373  07B6  3003               	movlw	03h
  1374  07B7                     u135:
  1375  07B7  1003               	clrc
  1376  07B8  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  1377  07B9  3EFF               	addlw	-1
  1378  07BA  1D03               	skipz
  1379  07BB  2FB7               	goto	u135
  1380  07BC  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  1381  07BD  2FBF               	goto	u141
  1382  07BE  2FC3               	goto	u140
  1383                           	
  1384  07BF                     u141:
  1385  07BF  1283               	bcf	status, 5	;RP0=0, select bank0
  1386  07C0  1303               	bcf	status, 6	;RP1=0, select bank0
  1387  07C1  1786               	bsf	(55/8),(55)&7	;volatile
  1388  07C2  2FC6               	goto	u154
  1389  07C3                     u140:
  1390  07C3  1283               	bcf	status, 5	;RP0=0, select bank0
  1391  07C4  1303               	bcf	status, 6	;RP1=0, select bank0
  1392  07C5  1386               	bcf	(55/8),(55)&7	;volatile
  1393  07C6                     u154:
  1394                           	line	80
  1395                           	
  1396  07C6                     l530:	
  1397                           ;Main.c: 80: RB6 = 1 & (data >> 2);
  1398  07C6  0871               	movf	(LCD_4bitsend@data),w
  1399  07C7  00F0               	movwf	(??_LCD_4bitsend+0)+0
  1400  07C8  3002               	movlw	02h
  1401  07C9                     u165:
  1402  07C9  1003               	clrc
  1403  07CA  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  1404  07CB  3EFF               	addlw	-1
  1405  07CC  1D03               	skipz
  1406  07CD  2FC9               	goto	u165
  1407  07CE  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  1408  07CF  2FD1               	goto	u171
  1409  07D0  2FD5               	goto	u170
  1410                           	
  1411  07D1                     u171:
  1412  07D1  1283               	bcf	status, 5	;RP0=0, select bank0
  1413  07D2  1303               	bcf	status, 6	;RP1=0, select bank0
  1414  07D3  1706               	bsf	(54/8),(54)&7	;volatile
  1415  07D4  2FD8               	goto	u184
  1416  07D5                     u170:
  1417  07D5  1283               	bcf	status, 5	;RP0=0, select bank0
  1418  07D6  1303               	bcf	status, 6	;RP1=0, select bank0
  1419  07D7  1306               	bcf	(54/8),(54)&7	;volatile
  1420  07D8                     u184:
  1421                           	line	81
  1422                           	
  1423  07D8                     l532:	
  1424                           ;Main.c: 81: RB5 = 1 & (data >> 1);
  1425  07D8  0871               	movf	(LCD_4bitsend@data),w
  1426  07D9  00F0               	movwf	(??_LCD_4bitsend+0)+0
  1427  07DA  3001               	movlw	01h
  1428  07DB                     u195:
  1429  07DB  1003               	clrc
  1430  07DC  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  1431  07DD  3EFF               	addlw	-1
  1432  07DE  1D03               	skipz
  1433  07DF  2FDB               	goto	u195
  1434  07E0  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  1435  07E1  2FE3               	goto	u201
  1436  07E2  2FE7               	goto	u200
  1437                           	
  1438  07E3                     u201:
  1439  07E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1440  07E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1441  07E5  1686               	bsf	(53/8),(53)&7	;volatile
  1442  07E6  2FEA               	goto	u214
  1443  07E7                     u200:
  1444  07E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1445  07E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1446  07E9  1286               	bcf	(53/8),(53)&7	;volatile
  1447  07EA                     u214:
  1448                           	line	82
  1449                           	
  1450  07EA                     l534:	
  1451                           ;Main.c: 82: RB4 = 1 & data;
  1452  07EA  1871               	btfsc	(LCD_4bitsend@data),0
  1453  07EB  2FED               	goto	u221
  1454  07EC  2FF1               	goto	u220
  1455                           	
  1456  07ED                     u221:
  1457  07ED  1283               	bcf	status, 5	;RP0=0, select bank0
  1458  07EE  1303               	bcf	status, 6	;RP1=0, select bank0
  1459  07EF  1606               	bsf	(52/8),(52)&7	;volatile
  1460  07F0  2FF4               	goto	u234
  1461  07F1                     u220:
  1462  07F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1463  07F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1464  07F3  1206               	bcf	(52/8),(52)&7	;volatile
  1465  07F4                     u234:
  1466                           	line	83
  1467                           	
  1468  07F4                     l536:	
  1469                           ;Main.c: 83: RB3 = 1;
  1470  07F4  1586               	bsf	(51/8),(51)&7	;volatile
  1471                           	line	84
  1472                           ;Main.c: 84: _delay((unsigned long)((2)*(2e6/4000.0)));
  1473                           	opt asmopt_off
  1474  07F5  30F9               movlw	249
  1475  07F6  00F0               movwf	(??_LCD_4bitsend+0)+0,f
  1476  07F7                     u387:
  1477  07F7  0000               	nop
  1478  07F8  0BF0               decfsz	(??_LCD_4bitsend+0)+0,f
  1479  07F9  2FF7               	goto	u387
  1480  07FA  2FFB               	nop2	;nop
  1481  07FB  0000               	nop
  1482                           opt asmopt_on
  1483                           
  1484                           	line	85
  1485                           	
  1486  07FC                     l538:	
  1487                           ;Main.c: 85: RB3 = 0;
  1488  07FC  1283               	bcf	status, 5	;RP0=0, select bank0
  1489  07FD  1303               	bcf	status, 6	;RP1=0, select bank0
  1490  07FE  1186               	bcf	(51/8),(51)&7	;volatile
  1491                           	line	87
  1492                           	
  1493  07FF                     l40:	
  1494  07FF  0008               	return
  1495                           	opt stack 0
  1496                           GLOBAL	__end_of_LCD_4bitsend
  1497  0800                     	__end_of_LCD_4bitsend:
  1498                           	signat	_LCD_4bitsend,4216
  1499                           psect	text86,local,class=CODE,delta=2,merge=1
  1500                           global __ptext86
  1501  0000                     __ptext86:
  1502                           	global	btemp
  1503  007E                     	btemp set 07Eh
  1504                           
  1505                           	DABS	1,126,2	;btemp
  1506                           	global	wtemp0
  1507  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_putstr@csz_string	PTR unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_LCD_initialize
    _main->_LCD_goto
    _main->_LCD_putstr
    _LCD_initialize->_LCD_command
    _LCD_clear->_LCD_command
    _LCD_goto->_LCD_command
    _LCD_putstr->_LCD_senddata
    _LCD_command->_LCD_4bitsend
    _LCD_senddata->_LCD_4bitsend

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     615
                     _LCD_initialize
                          _LCD_clear
                           _LCD_goto
                         _LCD_putstr
 ---------------------------------------------------------------------------------
 (1) _LCD_initialize                                       2     2      0     135
                                              3 COMMON     2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0     135
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_goto                                             2     1      1     180
                                              3 COMMON     2     1      1
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_putstr                                           2     2      0     165
                                              3 COMMON     2     2      0
                       _LCD_senddata
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          1     1      0     135
                                              2 COMMON     1     1      0
                       _LCD_4bitsend
 ---------------------------------------------------------------------------------
 (2) _LCD_senddata                                         1     1      0     135
                                              2 COMMON     1     1      0
                       _LCD_4bitsend
 ---------------------------------------------------------------------------------
 (3) _LCD_4bitsend                                         2     2      0     120
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_initialize
     _LCD_command
       _LCD_4bitsend
   _LCD_clear
     _LCD_command
       _LCD_4bitsend
   _LCD_goto
     _LCD_command
       _LCD_4bitsend
   _LCD_putstr
     _LCD_senddata
       _LCD_4bitsend

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       3       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


HI-TECH Software PICC Macro Assembler V1.00 build 12136 
Symbol Table                                                                                   Wed Jul 25 17:00:52 2012

                      pc 0002                       l31 06B4                       l40 07FF  
                     l32 06C8                       l33 06D4                       l34 06D3  
                     l43 066C                       l35 06D5                       l52 0697  
                     l36 06D6                       l53 0686                       l61 067B  
                     l37 06D6                       l54 06A4                       l62 0683  
                     l46 075F                       l55 06A4                       l63 0683  
                     l49 0661                       l58 0656                       u20 0770  
                     u21 076C                       u15 0764                       u50 0782  
                     u34 0773                       u51 077E                       u45 0776  
                     u80 0794                       u64 0785                       u81 0790  
                     u75 0788                       u94 0797                       fsr 0004  
                    l520 0761                      l600 0735                      l530 07C6  
                    l522 07A9                      l610 0759                      l602 073D  
                    l532 07D8                      l524 07AA                      l540 0663  
                    l620 0685                      l612 0650                      l604 0747  
                    l534 07EA                      l526 07B1                      l542 0666  
                    l622 0686                      l614 066E                      l606 074D  
                    l550 06E2                      l630 06A8                      l536 07F4  
                    l528 07B4                      l544 0658                      l624 0692  
                    l616 0673                      l608 0753                      l560 06F4  
                    l552 06EE                      l640 06C1                      l632 06A9  
                    l538 07FC                      l546 065B                      l626 0697  
                    l618 067B                      l570 0702                      l562 06F5  
                    l554 06F1                      l642 06CC                      l634 06AE  
                    l580 0717                      l572 0703                      l564 06F6  
                    l556 06F2                      l548 06D9                      l636 06B4  
                    l628 06A5                      l590 0725                      l582 071A  
                    l574 0704                      l566 06FE                      l558 06F3  
                    l638 06BB                      l592 072F                      l584 071B  
                    l576 0705                      l568 0701                      l594 0732  
                    l586 071C                      l578 070D                      l596 0733  
                    l588 071D                      l598 0734                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RC3 003B  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
                    u110 07A6                      u111 07A2                      u200 07E7  
                    u201 07E3                      u105 079A                      u220 07F1  
                    u140 07C3                      u124 07A9                      u221 07ED  
                    u141 07BF                      u214 07EA                      u135 07B7  
                    u240 0673                      u241 0672                      u234 07F4  
                    u170 07D5                      u154 07C6                      u250 06A3  
                    u171 07D1                      u251 06A2                      u307 06F9  
                    u260 06C1                      u165 07C9                      u317 0708  
                    u261 06C0                      u270 06CC                      u327 0712  
                    u271 06CB                      u184 07D8                      u337 0720  
                    u195 07DB                      u347 072A                      u357 0738  
                    u367 0742                      u287 06DD                      u377 07AC  
                    u297 06E9                      u387 07F7                      fsr0 0004  
            ?_LCD_putstr 0070           ??_LCD_4bitsend 0070                     STR_1 0009  
                   STR_2 0012             ?_LCD_command 0070                     _main 06A5  
                   btemp 007E                     start 0000       __size_of_LCD_clear 0007  
         LCD_goto@column 0073  __size_of_LCD_initialize 0087         __end_of_LCD_goto 0684  
                  ?_main 0070                    _TRISB 0086            ?_LCD_senddata 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
            LCD_goto@row 0074      __size_of_LCD_putstr 0021             __end_of_main 06D9  
                 ??_main 0075        __end_of_LCD_clear 0657           ??_LCD_senddata 0072  
                 _TRISC3 043B     __end_of_LCD_4bitsend 0800     __size_of_LCD_command 000B  
              ?_LCD_goto 0073           __pcstackCOMMON 0070           _LCD_initialize 06D9  
           ??_LCD_putstr 0073               ??_LCD_goto 0074               __pmaintext 06A5  
 __end_of_LCD_initialize 0760          LCD_senddata@var 0072       __end_of_LCD_putstr 06A5  
   __end_of_LCD_senddata 0662    __size_of_LCD_4bitsend 00A0          ?_LCD_initialize 0070  
       LCD_4bitsend@data 0071                _LCD_clear 0650     end_of_initialization 064C  
           _LCD_4bitsend 0760               ?_LCD_clear 0070    __size_of_LCD_senddata 000B  
      __size_of_LCD_goto 0017      start_initialization 064C            ??_LCD_command 0072  
           _LCD_senddata 0657              ??_LCD_clear 0073         ??_LCD_initialize 0073  
    __end_of_LCD_command 066D                __pstrings 0003                 _LCD_goto 066D  
            __stringbase 0008              _LCD_command 0662                 __ptext80 0650  
               __ptext81 066D                 __ptext82 0684                 __ptext83 0662  
               __ptext84 0657                 __ptext85 0760                 __ptext86 0000  
               __ptext79 06D9            __size_of_main 0034     LCD_putstr@csz_string 0074  
             _LCD_putstr 0684                stringcode 0003                 stringdir 0003  
               stringtab 0003            ?_LCD_4bitsend 0070           LCD_command@var 0072  
